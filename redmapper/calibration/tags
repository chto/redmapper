!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Background	../background.py	/^class Background(object):$/;"	c
BackgroundGenerator	../background.py	/^class BackgroundGenerator(object):$/;"	c
CPAR_NTERMS	../solver_nfw/solver_nfw.h	11;"	d
CVAL_DEFAULT	../solver_nfw/solver_nfw.h	9;"	d
Catalog	../catalog.py	/^class Catalog(DataObject):$/;"	c
Centering	../centering.py	/^class Centering(object):$/;"	c
CenteringBCG	../centering.py	/^class CenteringBCG(Centering):$/;"	c
CenteringRandom	../centering.py	/^class CenteringRandom(Centering):$/;"	c
CenteringRandomSatellite	../centering.py	/^class CenteringRandomSatellite(Centering):$/;"	c
CenteringWcenZred	../centering.py	/^class CenteringWcenZred(Centering):$/;"	c
ChisqDistObject	../chisq_dist/chisq_dist_pywrap.c	/^struct ChisqDistObject {$/;"	s	file:
ChisqDistObject_compute	../chisq_dist/chisq_dist_pywrap.c	/^PyObject* ChisqDistObject_compute(const struct ChisqDistObject* self, PyObject *args)$/;"	f
ChisqDistObject_dealloc	../chisq_dist/chisq_dist_pywrap.c	/^ChisqDistObject_dealloc(struct ChisqDistObject* self)$/;"	f	file:
ChisqDistObject_init	../chisq_dist/chisq_dist_pywrap.c	/^ChisqDistObject_init(struct ChisqDistObject* self, PyObject* args)$/;"	f	file:
ChisqDistObject_methods	../chisq_dist/chisq_dist_pywrap.c	/^static PyMethodDef ChisqDistObject_methods[] = {$/;"	v	file:
ChisqDistObject_repr	../chisq_dist/chisq_dist_pywrap.c	/^ChisqDistObject_repr(struct ChisqDistObject* self) {$/;"	f	file:
ChisqDist_module_methods	../chisq_dist/chisq_dist_pywrap.c	/^static PyMethodDef ChisqDist_module_methods[] = {$/;"	v	file:
Cluster	../cluster.py	/^class Cluster(Entry):$/;"	c
ClusterCatalog	../cluster.py	/^class ClusterCatalog(Catalog):$/;"	c
ClusterRunner	../cluster_runner.py	/^class ClusterRunner(object):$/;"	c
ColorBackground	../color_background.py	/^class ColorBackground(object):$/;"	c
ColorBackgroundGenerator	../color_background.py	/^class ColorBackgroundGenerator(object):$/;"	c
ConfigField	../configuration.py	/^class ConfigField(object):$/;"	c
Configuration	../configuration.py	/^class Configuration(object):$/;"	c
CorrectionFitter	../fitters.py	/^class CorrectionFitter(object):$/;"	c
CubicSpline	../utilities.py	/^class CubicSpline(object):$/;"	c
DataObject	../catalog.py	/^class DataObject(object):$/;"	c
DepthFunction	../depth_fitting.py	/^class DepthFunction(object):$/;"	c
DepthLim	../depth_fitting.py	/^class DepthLim(object):$/;"	c
DepthMap	../depthmap.py	/^class DepthMap(object):$/;"	c
DuplicatableConfig	../configuration.py	/^class DuplicatableConfig(object):$/;"	c
EcgmmFitter	../fitters.py	/^class EcgmmFitter(object):$/;"	c
Entry	../catalog.py	/^class Entry(DataObject):$/;"	c
FakeMaskConfig	../galaxy.py	/^class FakeMaskConfig(object):$/;"	c
Galaxy	../galaxy.py	/^class Galaxy(Entry):$/;"	c
GalaxyCatalog	../galaxy.py	/^class GalaxyCatalog(Catalog):$/;"	c
GalaxyCatalogMaker	../galaxy.py	/^class GalaxyCatalogMaker(object):$/;"	c
HPMask	../mask.py	/^class HPMask(Mask):$/;"	c
Logger	../utilities.py	/^class Logger(object):$/;"	c
MIN_EIGENVAL	../chisq_dist/chisq_dist.h	8;"	d
MStar	../utilities.py	/^class MStar(object):$/;"	c
Mask	../mask.py	/^class Mask(object):$/;"	c
MedZFitter	../fitters.py	/^class MedZFitter(object):$/;"	c
NPY_NO_DEPRECATED_API	../chisq_dist/chisq_dist.h	6;"	d
NPY_NO_DEPRECATED_API	../chisq_dist/chisq_dist_pywrap.c	6;"	d	file:
NPY_NO_DEPRECATED_API	../solver_nfw/solver_nfw.h	4;"	d
NPY_NO_DEPRECATED_API	../solver_nfw/solver_nfw_pywrap.c	5;"	d	file:
NzPlot	../plotting.py	/^class NzPlot(object):$/;"	c
PrepMembers	prepmembers.py	/^class PrepMembers(object):$/;"	c
PyChisqDistType	../chisq_dist/chisq_dist_pywrap.c	/^static PyTypeObject PyChisqDistType = {$/;"	v	file:
PyInit__chisq_dist_pywrap	../chisq_dist/chisq_dist_pywrap.c	/^PyInit__chisq_dist_pywrap(void)$/;"	f
PyInit__solver_nfw_pywrap	../solver_nfw/solver_nfw_pywrap.c	/^PyInit__solver_nfw_pywrap(void)$/;"	f
PyMODINIT_FUNC	../chisq_dist/chisq_dist_pywrap.c	251;"	d	file:
PyMODINIT_FUNC	../solver_nfw/solver_nfw_pywrap.c	212;"	d	file:
PySolverType	../solver_nfw/solver_nfw_pywrap.c	/^static PyTypeObject PySolverType = {$/;"	v	file:
RSIG_DEFAULT	../solver_nfw/solver_nfw.h	10;"	d
RedSequenceCalibrator	redsequencecal.py	/^class RedSequenceCalibrator(object):$/;"	c
RedSequenceColorPar	../redsequence.py	/^class RedSequenceColorPar(object):$/;"	c
RedSequenceFitter	../fitters.py	/^class RedSequenceFitter(object):$/;"	c
RedSequenceOffDiagonalFitter	../fitters.py	/^class RedSequenceOffDiagonalFitter(object):$/;"	c
RedmagicCalibrator	../redmagic/redmagic_calibrate.py	/^class RedmagicCalibrator(object):$/;"	c
RedmagicGenerateRandoms	../redmagic/redmagic_randoms.py	/^class RedmagicGenerateRandoms(object):$/;"	c
RedmagicParameterFitter	../redmagic/redmagic_calibrate.py	/^class RedmagicParameterFitter(object):$/;"	c
RedmagicSelector	../redmagic/redmagic_selector.py	/^class RedmagicSelector(object):$/;"	c
RedmapperCalibrationIteration	calibrate.py	/^class RedmapperCalibrationIteration(object):$/;"	c
RedmapperCalibrationIterationFinal	calibrate.py	/^class RedmapperCalibrationIterationFinal(object):$/;"	c
RedmapperCalibrator	calibrate.py	/^class RedmapperCalibrator(object):$/;"	c
RedmapperConsolidateTask	../pipeline/redmapperconsolidatetask.py	/^class RedmapperConsolidateTask(object):$/;"	c
RedmapperRun	../redmapper_run.py	/^class RedmapperRun(object):$/;"	c
RunCatalog	../runcat.py	/^class RunCatalog(ClusterRunner):$/;"	c
RunColormem	../run_colormem.py	/^class RunColormem(ClusterRunner):$/;"	c
RunFirstPass	../run_firstpass.py	/^class RunFirstPass(ClusterRunner):$/;"	c
RunLikelihoods	../run_likelihoods.py	/^class RunLikelihoods(ClusterRunner):$/;"	c
RunPercolation	../run_percolation.py	/^class RunPercolation(ClusterRunner):$/;"	c
RunRedmagicTask	../redmagic/redmagictask.py	/^class RunRedmagicTask(object):$/;"	c
RunRedmapperPixelTask	../pipeline/redmappertask.py	/^class RunRedmapperPixelTask(object):$/;"	c
RunZredPixelTask	../pipeline/zredtask.py	/^class RunZredPixelTask(object):$/;"	c
SCALEVAL_DEFAULT	../solver_nfw/solver_nfw.h	7;"	d
SCALEVAL_DEFAULT_NOTUSE	../solver_nfw/solver_nfw.h	8;"	d
SEC_PER_DEG	../utilities.py	/^SEC_PER_DEG = 3600$/;"	v
SIGINT_DEFAULT	../chisq_dist/chisq_dist.h	9;"	d
SelectSpecRedGalaxies	selectspecred.py	/^class SelectSpecRedGalaxies(object):$/;"	c
SelectSpecSeeds	selectspecseeds.py	/^class SelectSpecSeeds(object):$/;"	c
Solver	../solver_nfw/solver_nfw_lib.py	/^class Solver(object):$/;"	c
SolverObject	../solver_nfw/solver_nfw_pywrap.c	/^struct SolverObject {$/;"	s	file:
SolverObject_dealloc	../solver_nfw/solver_nfw_pywrap.c	/^SolverObject_dealloc(struct SolverObject* self)$/;"	f	file:
SolverObject_init	../solver_nfw/solver_nfw_pywrap.c	/^SolverObject_init(struct SolverObject* self, PyObject *args)$/;"	f	file:
SolverObject_methods	../solver_nfw/solver_nfw_pywrap.c	/^static PyMethodDef SolverObject_methods[] = {$/;"	v	file:
SolverObject_repr	../solver_nfw/solver_nfw_pywrap.c	/^SolverObject_repr(struct SolverObject* self) {$/;"	f	file:
SolverObject_solver_nfw	../solver_nfw/solver_nfw_pywrap.c	/^PyObject* SolverObject_solver_nfw(const struct SolverObject* self, PyObject *args)$/;"	f
Solver_module_methods	../solver_nfw/solver_nfw_pywrap.c	/^static PyMethodDef Solver_module_methods[] = {$/;"	v	file:
SpecPlot	../plotting.py	/^class SpecPlot(object):$/;"	c
TOL_DEFAULT	../solver_nfw/solver_nfw.h	6;"	d
TOTAL_SQDEG	../utilities.py	/^TOTAL_SQDEG = 4 * 180**2 \/ np.pi$/;"	v
TempD	../galaxy.py	/^        class TempD(object):$/;"	c	function:FakeMaskConfig.__init__
VolumeLimitMask	../volumelimit.py	/^class VolumeLimitMask(object):$/;"	c
VolumeLimitMaskFixed	../volumelimit.py	/^class VolumeLimitMaskFixed(object):$/;"	c
WcenCFitter	centeringcal.py	/^class WcenCFitter(object):$/;"	c
WcenCalibrator	centeringcal.py	/^class WcenCalibrator(object):$/;"	c
WcenCwFitter	centeringcal.py	/^class WcenCwFitter(object):$/;"	c
WcenFgFitter	centeringcal.py	/^class WcenFgFitter(object):$/;"	c
ZLambdaCalibrator	zlambdacal.py	/^class ZLambdaCalibrator(object):$/;"	c
ZLambdaFitter	zlambdacal.py	/^class ZLambdaFitter(object):$/;"	c
Zlambda	../zlambda.py	/^class Zlambda(object):$/;"	c
ZlambdaCorrectionPar	../zlambda.py	/^class ZlambdaCorrectionPar(object):$/;"	c
ZredBackground	../background.py	/^class ZredBackground(object):$/;"	c
ZredBackgroundGenerator	../background.py	/^class ZredBackgroundGenerator(object):$/;"	c
ZredColor	../zred_color.py	/^class ZredColor(object):$/;"	c
ZredRunCatalog	../zred_runner.py	/^class ZredRunCatalog(object):$/;"	c
ZredRunPixels	../zred_runner.py	/^class ZredRunPixels(object):$/;"	c
_CALCLAMBDA_CHISQ_DIST	../chisq_dist/chisq_dist.h	2;"	d
_SOLVER_NFW	../solver_nfw/solver_nfw.h	2;"	d
__call__	../depth_fitting.py	/^    def __call__(self, x):$/;"	m	class:DepthFunction	file:
__call__	../fitters.py	/^    def __call__(self, pars):$/;"	m	class:CorrectionFitter	file:
__call__	../fitters.py	/^    def __call__(self, pars):$/;"	m	class:EcgmmFitter	file:
__call__	../fitters.py	/^    def __call__(self, pars):$/;"	m	class:MedZFitter	file:
__call__	../fitters.py	/^    def __call__(self, pars):$/;"	m	class:RedSequenceFitter	file:
__call__	../fitters.py	/^    def __call__(self, pars):$/;"	m	class:RedSequenceOffDiagonalFitter	file:
__call__	../redmagic/redmagic_calibrate.py	/^    def __call__(self, pars):$/;"	m	class:RedmagicParameterFitter	file:
__call__	../utilities.py	/^    def __call__(self, x):$/;"	m	class:CubicSpline	file:
__call__	../utilities.py	/^    def __call__(self, z):$/;"	m	class:MStar	file:
__call__	centeringcal.py	/^    def __call__(self, pars):$/;"	m	class:WcenCFitter	file:
__call__	centeringcal.py	/^    def __call__(self, pars):$/;"	m	class:WcenCwFitter	file:
__call__	centeringcal.py	/^    def __call__(self, pars):$/;"	m	class:WcenFgFitter	file:
__call__	zlambdacal.py	/^    def __call__(self, pars):$/;"	m	class:ZLambdaFitter	file:
__copy__	../cluster.py	/^    def __copy__(self):$/;"	m	class:Cluster	file:
__dir__	../catalog.py	/^    def __dir__(self):$/;"	m	class:DataObject	file:
__get__	../configuration.py	/^    def __get__(self, obj, type=None):$/;"	m	class:ConfigField	file:
__getattr__	../catalog.py	/^    def __getattr__(self, attr):$/;"	m	class:DataObject	file:
__getattr__	../catalog.py	/^    def __getattr__(self, attr):$/;"	m	class:Entry	file:
__getitem__	../catalog.py	/^    def __getitem__(self, key):$/;"	m	class:Catalog	file:
__getitem__	../cluster.py	/^    def __getitem__(self, key):$/;"	m	class:ClusterCatalog	file:
__init__	../background.py	/^    def __init__(self, config):$/;"	m	class:BackgroundGenerator
__init__	../background.py	/^    def __init__(self, config):$/;"	m	class:ZredBackgroundGenerator
__init__	../background.py	/^    def __init__(self, filename):$/;"	m	class:Background
__init__	../background.py	/^    def __init__(self, filename):$/;"	m	class:ZredBackground
__init__	../catalog.py	/^    def __init__(self, *arrays):$/;"	m	class:DataObject
__init__	../catalog.py	/^    def __init__(self, array):$/;"	m	class:Entry
__init__	../centering.py	/^    def __init__(self, cluster, zlambda_corr=None):$/;"	m	class:Centering
__init__	../cluster.py	/^    def __init__(self, array, **kwargs):$/;"	m	class:ClusterCatalog
__init__	../cluster.py	/^    def __init__(self, cat_vals=None, r0=None, beta=None, config=None, zredstr=None, bkg=None, cbkg=None, neighbors=None, zredbkg=None):$/;"	m	class:Cluster
__init__	../cluster_runner.py	/^    def __init__(self, conf, **kwargs):$/;"	m	class:ClusterRunner
__init__	../color_background.py	/^    def __init__(self, config, minrangecheck=1000):$/;"	m	class:ColorBackgroundGenerator
__init__	../color_background.py	/^    def __init__(self, filename, usehdrarea=False):$/;"	m	class:ColorBackground
__init__	../configuration.py	/^    def __init__(self, config):$/;"	m	class:DuplicatableConfig
__init__	../configuration.py	/^    def __init__(self, configfile, outpath=None):$/;"	m	class:Configuration
__init__	../configuration.py	/^    def __init__(self, value=None, default=None, isArray=False, required=False, array_length=None, isList=False):$/;"	m	class:ConfigField
__init__	../depth_fitting.py	/^    def __init__(self, mag, mag_err, max_gals=100000):$/;"	m	class:DepthLim
__init__	../depth_fitting.py	/^    def __init__(self,mag,magErr,zp,nSig):$/;"	m	class:DepthFunction
__init__	../depthmap.py	/^    def __init__(self, config, depthfile=None):$/;"	m	class:DepthMap
__init__	../fitters.py	/^    def __init__(self, mean_nodes, redshifts, dzs, dz_errs,$/;"	m	class:CorrectionFitter
__init__	../fitters.py	/^    def __init__(self, mean_nodes,$/;"	m	class:RedSequenceFitter
__init__	../fitters.py	/^    def __init__(self, nodes, redshifts, d1, d2, s1, s2, mag_errs, j, k, probs, bkgs, covmat_prior, min_eigenvalue=0.0):$/;"	m	class:RedSequenceOffDiagonalFitter
__init__	../fitters.py	/^    def __init__(self, y, y_err):$/;"	m	class:EcgmmFitter
__init__	../fitters.py	/^    def __init__(self, z_nodes, redshifts, values):$/;"	m	class:MedZFitter
__init__	../galaxy.py	/^            def __init__(self):$/;"	m	class:FakeMaskConfig.__init__.TempD
__init__	../galaxy.py	/^    def __init__(self, *arrays, **kwargs):$/;"	m	class:GalaxyCatalog
__init__	../galaxy.py	/^    def __init__(self, maskfile, mask_mode):$/;"	m	class:FakeMaskConfig
__init__	../galaxy.py	/^    def __init__(self, outbase, info_dict, nside=32, maskfile=None, mask_mode=0):$/;"	m	class:GalaxyCatalogMaker
__init__	../mask.py	/^    def __init__(self, config, **kwargs):$/;"	m	class:HPMask
__init__	../mask.py	/^    def __init__(self, config, include_maskgals=True):$/;"	m	class:Mask
__init__	../pipeline/redmapperconsolidatetask.py	/^    def __init__(self, configfile, lambda_cuts=None, vlim_lstars=[], path=None):$/;"	m	class:RedmapperConsolidateTask
__init__	../pipeline/redmappertask.py	/^    def __init__(self, configfile, pixel, nside, path=None):$/;"	m	class:RunRedmapperPixelTask
__init__	../pipeline/zredtask.py	/^    def __init__(self, configfile, pixel, nside, path=None):$/;"	m	class:RunZredPixelTask
__init__	../plotting.py	/^    def __init__(self, conf, binsize=0.02):$/;"	m	class:NzPlot
__init__	../plotting.py	/^    def __init__(self, conf, binsize=0.02, nsig=4.0):$/;"	m	class:SpecPlot
__init__	../redmagic/redmagic_calibrate.py	/^    def __init__(self, conf):$/;"	m	class:RedmagicCalibrator
__init__	../redmagic/redmagic_calibrate.py	/^    def __init__(self, nodes, corrnodes, z, z_err,$/;"	m	class:RedmagicParameterFitter
__init__	../redmagic/redmagic_randoms.py	/^    def __init__(self, config, vlim_mask_or_file, redmagic_cat_or_file):$/;"	m	class:RedmagicGenerateRandoms
__init__	../redmagic/redmagic_selector.py	/^    def __init__(self, conf, vlim_masks=None):$/;"	m	class:RedmagicSelector
__init__	../redmagic/redmagictask.py	/^    def __init__(self, configfile, path=None):$/;"	m	class:RunRedmagicTask
__init__	../redmapper_run.py	/^    def __init__(self, config):$/;"	m	class:RedmapperRun
__init__	../redsequence.py	/^    def __init__(self, filename, zbinsize=None, minsig=0.01, fine=False, zrange=None, config=None, limmag=None):$/;"	m	class:RedSequenceColorPar
__init__	../solver_nfw/solver_nfw_lib.py	/^    def __init__(self, r0, beta, ucounts, bcounts, r, w,$/;"	m	class:Solver
__init__	../utilities.py	/^    def __init__(self):$/;"	m	class:Logger
__init__	../utilities.py	/^    def __init__(self, survey, band):$/;"	m	class:MStar
__init__	../utilities.py	/^    def __init__(self, x, y, yp=None):$/;"	m	class:CubicSpline
__init__	../volumelimit.py	/^    def __init__(self, config):$/;"	m	class:VolumeLimitMaskFixed
__init__	../volumelimit.py	/^    def __init__(self, config, vlim_lstar, vlimfile=None, use_geometry=False):$/;"	m	class:VolumeLimitMask
__init__	../zlambda.py	/^    def __init__(self, cluster):$/;"	m	class:Zlambda
__init__	../zlambda.py	/^    def __init__(self, parfile=None, pars=None, zrange=None, zbinsize=None, zlambda_pivot=None):$/;"	m	class:ZlambdaCorrectionPar
__init__	../zred_color.py	/^    def __init__(self, zredstr, sigint=0.001, do_correction=True,$/;"	m	class:ZredColor
__init__	../zred_runner.py	/^    def __init__(self, config):$/;"	m	class:ZredRunCatalog
__init__	../zred_runner.py	/^    def __init__(self, config):$/;"	m	class:ZredRunPixels
__init__	calibrate.py	/^    def __init__(self, conf):$/;"	m	class:RedmapperCalibrator
__init__	calibrate.py	/^    def __init__(self, config):$/;"	m	class:RedmapperCalibrationIteration
__init__	calibrate.py	/^    def __init__(self, config):$/;"	m	class:RedmapperCalibrationIterationFinal
__init__	centeringcal.py	/^    def __init__(self, config, iteration, randcatfile=None, randsatcatfile=None):$/;"	m	class:WcenCalibrator
__init__	centeringcal.py	/^    def __init__(self, pcen, psat, mstar, lamscale, refmag, cwt, phi1, bcounts):$/;"	m	class:WcenCFitter
__init__	centeringcal.py	/^    def __init__(self, pcen, psat, wcen, ffg, fsat, lscale):$/;"	m	class:WcenCwFitter
__init__	centeringcal.py	/^    def __init__(self, w, lscale):$/;"	m	class:WcenFgFitter
__init__	prepmembers.py	/^    def __init__(self, conf):$/;"	m	class:PrepMembers
__init__	redsequencecal.py	/^    def __init__(self, conf, galfile):$/;"	m	class:RedSequenceCalibrator
__init__	selectspecred.py	/^    def __init__(self, conf):$/;"	m	class:SelectSpecRedGalaxies
__init__	selectspecseeds.py	/^    def __init__(self, conf):$/;"	m	class:SelectSpecSeeds
__init__	zlambdacal.py	/^    def __init__(self, config, corrslope=False):$/;"	m	class:ZLambdaCalibrator
__init__	zlambdacal.py	/^    def __init__(self, nodes, slope_nodes, redshifts, dzs, redshift_errs, loglambdas):$/;"	m	class:ZLambdaFitter
__len__	../catalog.py	/^    def __len__(self): return self.size$/;"	m	class:Catalog	file:
__repr__	../catalog.py	/^    def __repr__(self):$/;"	m	class:DataObject	file:
__repr__	../redsequence.py	/^    def __repr__(self):$/;"	m	class:RedSequenceColorPar	file:
__set__	../configuration.py	/^    def __set__(self, obj, value):$/;"	m	class:ConfigField	file:
__setattr__	../catalog.py	/^    def __setattr__(self, attr, val):$/;"	m	class:DataObject	file:
__setitem__	../catalog.py	/^    def __setitem__(self, key, val):$/;"	m	class:Catalog	file:
__str__	../catalog.py	/^    def __str__(self):$/;"	m	class:DataObject	file:
__version__	../_version.py	/^__version__ = '0.2.5'$/;"	v
__version_info__	../_version.py	/^__version_info__ = tuple(map(int, __version__.split('.')))$/;"	v
_additional_initialization	../cluster_runner.py	/^    def _additional_initialization(self, **kwargs):$/;"	m	class:ClusterRunner
_additional_initialization	../run_colormem.py	/^    def _additional_initialization(self, **kwargs):$/;"	m	class:RunColormem
_additional_initialization	../run_firstpass.py	/^    def _additional_initialization(self, specmode=False):$/;"	m	class:RunFirstPass
_additional_initialization	../run_likelihoods.py	/^    def _additional_initialization(self):$/;"	m	class:RunLikelihoods
_additional_initialization	../run_percolation.py	/^    def _additional_initialization(self, **kwargs):$/;"	m	class:RunPercolation
_additional_initialization	../runcat.py	/^    def _additional_initialization(self, **kwargs):$/;"	m	class:RunCatalog
_bracket_fn	../zlambda.py	/^    def _bracket_fn(self, z):$/;"	m	class:Zlambda
_build_geometry_mask	../volumelimit.py	/^    def _build_geometry_mask(self):$/;"	m	class:VolumeLimitMask
_build_mask	../volumelimit.py	/^    def _build_mask(self):$/;"	m	class:VolumeLimitMask
_calc_corrections	redsequencecal.py	/^    def _calc_corrections(self, gals, mode2=False):$/;"	m	class:RedSequenceCalibrator
_calc_diagonal_pars	redsequencecal.py	/^    def _calc_diagonal_pars(self, gals, doRaise=True):$/;"	m	class:RedSequenceCalibrator
_calc_luminosity	../cluster.py	/^    def _calc_luminosity(self, normmag, idx=None):$/;"	m	class:Cluster
_calc_medcols	redsequencecal.py	/^    def _calc_medcols(self, gals):$/;"	m	class:RedSequenceCalibrator
_calc_offdiagonal_pars	redsequencecal.py	/^    def _calc_offdiagonal_pars(self, gals, doRaise=True):$/;"	m	class:RedSequenceCalibrator
_calc_pivotmags	redsequencecal.py	/^    def _calc_pivotmags(self, gals):$/;"	m	class:RedSequenceCalibrator
_calc_radial_profile	../cluster.py	/^    def _calc_radial_profile(self, idx=None, rscale=0.15):$/;"	m	class:Cluster
_calc_volume_factor	redsequencecal.py	/^    def _calc_volume_factor(self, zref):$/;"	m	class:RedSequenceCalibrator
_calc_zreds	redsequencecal.py	/^    def _calc_zreds(self, gals, do_correction=True):$/;"	m	class:RedSequenceCalibrator
_calculate_lndist	../zred_color.py	/^    def _calculate_lndist(self, galaxy, zbins):$/;"	m	class:ZredColor
_check_galaxies	../galaxy.py	/^    def _check_galaxies(self, gals):$/;"	m	class:GalaxyCatalogMaker
_cleanup	../cluster_runner.py	/^    def _cleanup(self):$/;"	m	class:ClusterRunner
_compute_neighbor_r	../cluster.py	/^    def _compute_neighbor_r(self):$/;"	m	class:Cluster
_compute_single_lupcorr	redsequencecal.py	/^    def _compute_single_lupcorr(self, j, cvals, svals, gals, dmags, mags, lups, mind, sign):$/;"	m	class:RedSequenceCalibrator
_compute_startvals	redsequencecal.py	/^    def _compute_startvals(self, nodes, z, val, xval=None, err=None, median=False, fit=False, mincomp=3):$/;"	m	class:RedSequenceCalibrator
_consolidate	../redmapper_run.py	/^    def _consolidate(self, hpixels, filenames, filetype, members=False, check=True):$/;"	m	class:RedmapperRun
_delta_bracket_fn	../zlambda.py	/^    def _delta_bracket_fn(self, z):$/;"	m	class:Zlambda
_doublerun_sort	../run_colormem.py	/^    def _doublerun_sort(self):$/;"	m	class:RunColormem
_galfile_stats	../configuration.py	/^    def _galfile_stats(self):$/;"	m	class:Configuration
_gen_maskgals	../mask.py	/^    def _gen_maskgals(self, maskgalfile):$/;"	m	class:Mask
_generate_mem_match_ids	../cluster_runner.py	/^    def _generate_mem_match_ids(self):$/;"	m	class:ClusterRunner
_get_pixel_splits	../redmapper_run.py	/^    def _get_pixel_splits(self):$/;"	m	class:RedmapperRun
_get_subpixels	../redmapper_run.py	/^    def _get_subpixels(self, nside_test, galtab):$/;"	m	class:RedmapperRun
_linfunc	centeringcal.py	/^        def _linfunc(p, x, y):$/;"	f	function:WcenCalibrator.run
_linfunc	redsequencecal.py	/^        def _linfunc(p, x, y):$/;"	f	function:RedSequenceCalibrator._compute_startvals
_lower_array	../catalog.py	/^    def _lower_array(self, array):$/;"	m	class:DataObject
_make_diagnostic_plots	redsequencecal.py	/^    def _make_diagnostic_plots(self, gals):$/;"	m	class:RedSequenceCalibrator
_make_photoz_map	../plotting.py	/^    def _make_photoz_map(self, z_spec, z_photo,$/;"	m	class:SpecPlot
_merge_arrays	../catalog.py	/^    def _merge_arrays(self, arrays):$/;"	m	class:DataObject
_more_setup	../cluster_runner.py	/^    def _more_setup(self, *args, **kwargs):$/;"	m	class:ClusterRunner
_more_setup	../run_colormem.py	/^    def _more_setup(self, *args, **kwargs):$/;"	m	class:RunColormem
_more_setup	../run_firstpass.py	/^    def _more_setup(self, *args, **kwargs):$/;"	m	class:RunFirstPass
_more_setup	../run_likelihoods.py	/^    def _more_setup(self, *args, **kwargs):$/;"	m	class:RunLikelihoods
_more_setup	../run_percolation.py	/^    def _more_setup(self, *args, **kwargs):$/;"	m	class:RunPercolation
_more_setup	../runcat.py	/^    def _more_setup(self, *args, **kwargs):$/;"	m	class:RunCatalog
_percolation_only_worker	../redmapper_run.py	/^    def _percolation_only_worker(self, hpix):$/;"	m	class:RedmapperRun
_pickle_method	../utilities.py	/^def _pickle_method(m):$/;"	f
_postprocess	../cluster_runner.py	/^    def _postprocess(self):$/;"	m	class:ClusterRunner
_postprocess	../run_colormem.py	/^    def _postprocess(self):$/;"	m	class:RunColormem
_postprocess	../run_likelihoods.py	/^    def _postprocess(self):$/;"	m	class:RunLikelihoods
_process_cluster	../cluster_runner.py	/^    def _process_cluster(self, cluster):$/;"	m	class:ClusterRunner
_process_cluster	../run_colormem.py	/^    def _process_cluster(self, cluster):$/;"	m	class:RunColormem
_process_cluster	../run_firstpass.py	/^    def _process_cluster(self, cluster):$/;"	m	class:RunFirstPass
_process_cluster	../run_likelihoods.py	/^    def _process_cluster(self, cluster):$/;"	m	class:RunLikelihoods
_process_cluster	../run_percolation.py	/^    def _process_cluster(self, cluster):$/;"	m	class:RunPercolation
_process_cluster	../runcat.py	/^    def _process_cluster(self, cluster):$/;"	m	class:RunCatalog
_read_mask	../volumelimit.py	/^    def _read_mask(self):$/;"	m	class:VolumeLimitMask
_reset_bad_values	../cluster_runner.py	/^    def _reset_bad_values(self, cluster):$/;"	m	class:ClusterRunner
_reset_bad_values	../run_likelihoods.py	/^    def _reset_bad_values(self, cluster):$/;"	m	class:RunLikelihoods
_reset_bad_values	../zred_color.py	/^    def _reset_bad_values(self, galaxy):$/;"	m	class:ZredColor
_reset_vars	../configuration.py	/^    def _reset_vars(self):$/;"	m	class:Configuration
_schechter_montecarlo_calib	centeringcal.py	/^    def _schechter_montecarlo_calib(self, testing=False):$/;"	m	class:WcenCalibrator
_set_lengths	../configuration.py	/^    def _set_lengths(self, l, length):$/;"	m	class:Configuration
_set_vars_from_dict	../configuration.py	/^    def _set_vars_from_dict(self, d, check_none=False):$/;"	m	class:Configuration
_setup	../cluster_runner.py	/^    def _setup(self):$/;"	m	class:ClusterRunner
_update_mpc_scale	../cluster.py	/^    def _update_mpc_scale(self):$/;"	m	class:Cluster
_update_mstar	../cluster.py	/^    def _update_mstar(self):$/;"	m	class:Cluster
_wcen_vals	../configuration.py	/^    def _wcen_vals(self):$/;"	m	class:Configuration
_worker	../background.py	/^    def _worker(self, zbinmark):$/;"	m	class:BackgroundGenerator
_worker	../redmapper_run.py	/^    def _worker(self, hpix):$/;"	m	class:RedmapperRun
_worker	../zred_runner.py	/^    def _worker(self, ind_range):$/;"	m	class:ZredRunCatalog
_worker	../zred_runner.py	/^    def _worker(self, index):$/;"	m	class:ZredRunPixels
_zlambda_calc_gaussian_err	../zlambda.py	/^    def _zlambda_calc_gaussian_err(self, z_lambda):$/;"	m	class:Zlambda
_zlambda_calc_pz	../zlambda.py	/^    def _zlambda_calc_pz(self, z_lambda, wtvals, maxrad, maxmag, slow=False):$/;"	m	class:Zlambda
_zlambda_calc_pz_and_check	../zlambda.py	/^    def _zlambda_calc_pz_and_check(self, z_lambda, wtvals, maxrad, maxmag, convergence_warning=False):$/;"	m	class:Zlambda
_zlambda_calcz	../zlambda.py	/^    def _zlambda_calcz(self, z_lambda):$/;"	m	class:Zlambda
_zlambda_select_neighbors	../zlambda.py	/^    def _zlambda_select_neighbors(self, wtvals, maxrad, maxmag):$/;"	m	class:Zlambda
add_fields	../catalog.py	/^    def add_fields(self, newdtype):$/;"	m	class:DataObject
add_fields	../catalog.py	/^    def add_fields(self, newdtype):$/;"	m	class:Entry
add_zred_fields	../galaxy.py	/^    def add_zred_fields(self):$/;"	m	class:GalaxyCatalog
allocated	../chisq_dist/chisq_dist_pywrap.c	/^    int allocated;$/;"	m	struct:ChisqDistObject	file:
allocated	../solver_nfw/solver_nfw_pywrap.c	/^    int allocated;$/;"	m	struct:SolverObject	file:
append	../catalog.py	/^    def append(self, append_cat):$/;"	m	class:Catalog
append_galaxies	../galaxy.py	/^    def append_galaxies(self, gals):$/;"	m	class:GalaxyCatalogMaker
applyErrorModel	../depth_fitting.py	/^def applyErrorModel(pars, magIn, noNoise=False, lnscat=None):$/;"	f
apply_correction	../zlambda.py	/^    def apply_correction(self, lam, zlam, zlam_e, pzbins=None, pzvals=None, noerr=False):$/;"	m	class:ZlambdaCorrectionPar
apply_errormodels	../utilities.py	/^def apply_errormodels(maskgals, mag_in, b=None, err_ratio=1.0, fluxmode=False,$/;"	f
area	../configuration.py	/^    area = ConfigField(required=True)$/;"	v	class:Configuration
area_coarsebin	../configuration.py	/^    area_coarsebin = ConfigField(default=0.005, required=True)$/;"	v	class:Configuration
area_finebin	../configuration.py	/^    area_finebin = ConfigField(default=0.001, required=True)$/;"	v	class:Configuration
astro_to_sphere	../utilities.py	/^def astro_to_sphere(ra, dec):$/;"	f
b	../configuration.py	/^    b = ConfigField(isArray=True)$/;"	v	class:Configuration
bands	../configuration.py	/^    bands = ConfigField(required=True)$/;"	v	class:Configuration
bcounts	../solver_nfw/solver_nfw.h	/^    double *bcounts;$/;"	m	struct:solver
beta	../solver_nfw/solver_nfw.h	/^    double beta;$/;"	m	struct:solver
bkg_chisqbinsize	../configuration.py	/^    bkg_chisqbinsize = ConfigField(default=0.5)$/;"	v	class:Configuration
bkg_deepmode	../configuration.py	/^    bkg_deepmode = ConfigField(default=False)$/;"	v	class:Configuration
bkg_refmagbinsize	../configuration.py	/^    bkg_refmagbinsize = ConfigField(default=0.2)$/;"	v	class:Configuration
bkg_zbinsize	../configuration.py	/^    bkg_zbinsize = ConfigField(default=0.02)$/;"	v	class:Configuration
bkg_zredbinsize	../configuration.py	/^    bkg_zredbinsize = ConfigField(default=0.01)$/;"	v	class:Configuration
bkgfile	../configuration.py	/^    bkgfile = ConfigField()$/;"	v	class:Configuration
bkgfile_color	../configuration.py	/^    bkgfile_color = ConfigField()$/;"	v	class:Configuration
border	../configuration.py	/^    border = ConfigField(default=0.0, required=True)$/;"	v	class:Configuration
c	../chisq_dist/chisq_dist.h	/^    double *c;$/;"	m	struct:chisq_dist
calcErrorModel	../depth_fitting.py	/^def calcErrorModel(_mag, _magErr, nSig=10.0, doPlot=False, nTrial=100, calcErr=False,$/;"	f
calc_areas	../depthmap.py	/^    def calc_areas(self, mags):$/;"	m	class:DepthMap
calc_bkg_density	../cluster.py	/^    def calc_bkg_density(self, r, chisq, refmag):$/;"	m	class:Cluster
calc_cbkg_density	../cluster.py	/^    def calc_cbkg_density(self, r, col_index, col, refmag):$/;"	m	class:Cluster
calc_lambdacerr	../cluster.py	/^    def calc_lambdacerr(self, maskgals, mstar, lam, rlam, pmem, cval, gamma):$/;"	m	class:Cluster
calc_maskcorr	../mask.py	/^    def calc_maskcorr(self, mstar, maxmag, limmag):$/;"	m	class:Mask
calc_maskdepth	../depth_fitting.py	/^    def calc_maskdepth(self, maskgals, mag, mag_err):$/;"	m	class:DepthLim
calc_maskdepth	../depthmap.py	/^    def calc_maskdepth(self, maskgals, ra, dec, mpc_scale):$/;"	m	class:DepthMap
calc_richness	../cluster.py	/^    def calc_richness(self, mask, calc_err=True, index=None):$/;"	m	class:Cluster
calc_richness_fit	../cluster.py	/^    def calc_richness_fit(self, mask, col_index, centcolor_in=None, rcut=0.5, mingal=5, sigint=0.05, calc_err=False):$/;"	m	class:Cluster
calc_theta_i	../utilities.py	/^def calc_theta_i(mag, mag_err, maxmag, limmag):$/;"	f
calc_zlambda	../zlambda.py	/^    def calc_zlambda(self, zin, mask, maxmag_in=None, calcpz=False, calc_err=True,$/;"	m	class:Zlambda
calc_zmax	../volumelimit.py	/^    def calc_zmax(self, ra, dec):$/;"	m	class:VolumeLimitMaskFixed
calc_zmax	../volumelimit.py	/^    def calc_zmax(self, ras, decs, get_fracgood=False):$/;"	m	class:VolumeLimitMask
calc_zred_bkg_density	../cluster.py	/^    def calc_zred_bkg_density(self, r, zred, refmag):$/;"	m	class:Cluster
calculate_chisq	../redsequence.py	/^    def calculate_chisq(self, galaxies, z, calc_lkhd=False, z_is_index=False):$/;"	m	class:RedSequenceColorPar
calculate_chisq_redshifts	../redsequence.py	/^    def calculate_chisq_redshifts(self, galaxy, zs, calc_lkhd=False, z_is_index=False):$/;"	m	class:RedSequenceColorPar
calib_color_maxnodes	../configuration.py	/^    calib_color_maxnodes = ConfigField(isArray=True, default=np.array([-1.0]))$/;"	v	class:Configuration
calib_color_nodesizes	../configuration.py	/^    calib_color_nodesizes = ConfigField(isArray=True, default=np.array([0.05]))$/;"	v	class:Configuration
calib_color_nsig	../configuration.py	/^    calib_color_nsig = ConfigField(default=1.5)$/;"	v	class:Configuration
calib_color_order	../configuration.py	/^    calib_color_order = ConfigField(isArray=True, default=np.array([-1]))$/;"	v	class:Configuration
calib_color_pcut	../configuration.py	/^    calib_color_pcut = ConfigField(default=0.7)$/;"	v	class:Configuration
calib_colormem_beta	../configuration.py	/^    calib_colormem_beta = ConfigField(default=0.0)$/;"	v	class:Configuration
calib_colormem_colormodes	../configuration.py	/^    calib_colormem_colormodes = ConfigField(isArray=True, default=np.array([1, 2]))$/;"	v	class:Configuration
calib_colormem_minlambda	../configuration.py	/^    calib_colormem_minlambda = ConfigField(default=10.0)$/;"	v	class:Configuration
calib_colormem_r0	../configuration.py	/^    calib_colormem_r0 = ConfigField(default=0.5)$/;"	v	class:Configuration
calib_colormem_sigint	../configuration.py	/^    calib_colormem_sigint = ConfigField(isArray=True, default=np.array([0.05, 0.03]))$/;"	v	class:Configuration
calib_colormem_smooth	../configuration.py	/^    calib_colormem_smooth = ConfigField(default=0.003)$/;"	v	class:Configuration
calib_colormem_zbounds	../configuration.py	/^    calib_colormem_zbounds = ConfigField(isArray=True, default=np.array([0.4]))$/;"	v	class:Configuration
calib_corr_nocorrslope	../configuration.py	/^    calib_corr_nocorrslope = ConfigField(default=True)$/;"	v	class:Configuration
calib_corr_nodesize	../configuration.py	/^    calib_corr_nodesize = ConfigField(default=0.05)$/;"	v	class:Configuration
calib_corr_pcut	../configuration.py	/^    calib_corr_pcut = ConfigField(default=0.9)$/;"	v	class:Configuration
calib_corr_slope_nodesize	../configuration.py	/^    calib_corr_slope_nodesize = ConfigField(default=0.1)$/;"	v	class:Configuration
calib_covmat_maxnodes	../configuration.py	/^    calib_covmat_maxnodes = ConfigField(isArray=True, default=np.array([-1.0]))$/;"	v	class:Configuration
calib_covmat_min_eigenvalue	../configuration.py	/^    calib_covmat_min_eigenvalue = ConfigField(default=0.0001)$/;"	v	class:Configuration
calib_covmat_nodesize	../configuration.py	/^    calib_covmat_nodesize = ConfigField(default=0.15)$/;"	v	class:Configuration
calib_covmat_prior	../configuration.py	/^    calib_covmat_prior = ConfigField(default=0.45)$/;"	v	class:Configuration
calib_lumfunc_alpha	../configuration.py	/^    calib_lumfunc_alpha = ConfigField(default=-1.0, required=True)$/;"	v	class:Configuration
calib_make_full_bkg	../configuration.py	/^    calib_make_full_bkg = ConfigField(default=True)$/;"	v	class:Configuration
calib_minlambda	../configuration.py	/^    calib_minlambda = ConfigField(default=5.0)$/;"	v	class:Configuration
calib_niter	../configuration.py	/^    calib_niter = ConfigField(default=3)$/;"	v	class:Configuration
calib_nproc	../configuration.py	/^    calib_nproc = ConfigField(default=1, required=True)$/;"	v	class:Configuration
calib_pcut	../configuration.py	/^    calib_pcut = ConfigField(default=0.3)$/;"	v	class:Configuration
calib_pivotmag_nodesize	../configuration.py	/^    calib_pivotmag_nodesize = ConfigField(default=0.1)$/;"	v	class:Configuration
calib_redgal_template	../configuration.py	/^    calib_redgal_template = ConfigField()$/;"	v	class:Configuration
calib_redspec_nsig	../configuration.py	/^    calib_redspec_nsig = ConfigField(default=2.0)$/;"	v	class:Configuration
calib_run_min_nside	../configuration.py	/^    calib_run_min_nside = ConfigField(default=1, required=True)$/;"	v	class:Configuration
calib_run_nproc	../configuration.py	/^    calib_run_nproc = ConfigField(default=1, required=True)$/;"	v	class:Configuration
calib_slope_nodesizes	../configuration.py	/^    calib_slope_nodesizes = ConfigField(isArray=True, default=np.array([0.1]))$/;"	v	class:Configuration
calib_smooth	../configuration.py	/^    calib_smooth = ConfigField(default=0.003)$/;"	v	class:Configuration
calib_use_pcol	../configuration.py	/^    calib_use_pcol = ConfigField(default=True)$/;"	v	class:Configuration
calib_zlambda_clean_nsig	../configuration.py	/^    calib_zlambda_clean_nsig = ConfigField(default=5.0)$/;"	v	class:Configuration
calib_zlambda_correct_niter	../configuration.py	/^    calib_zlambda_correct_niter = ConfigField(default=3)$/;"	v	class:Configuration
calib_zlambda_minlambda	../configuration.py	/^    calib_zlambda_minlambda = ConfigField(default=20.0)$/;"	v	class:Configuration
calib_zlambda_nodesize	../configuration.py	/^    calib_zlambda_nodesize = ConfigField(default=0.04)$/;"	v	class:Configuration
calib_zlambda_slope_nodesize	../configuration.py	/^    calib_zlambda_slope_nodesize = ConfigField(default=0.1)$/;"	v	class:Configuration
calib_zrange_cushion	../configuration.py	/^    calib_zrange_cushion = ConfigField(default=0.05)$/;"	v	class:Configuration
catfile	../configuration.py	/^    catfile = ConfigField()$/;"	v	class:Configuration
centerclass	../configuration.py	/^    centerclass = ConfigField(default='CenteringBCG', required=True)$/;"	v	class:Configuration
check_and_fix_covmat	../chisq_dist/chisq_dist.c	/^int check_and_fix_covmat(gsl_matrix *covmat) {$/;"	f
check_files	../configuration.py	/^    def check_files(self, check_zredfile=False, check_bkgfile=False, check_bkgfile_components=False,$/;"	m	class:Configuration
chisq_dist	../chisq_dist/chisq_dist.c	/^int chisq_dist(int mode, int do_chisq, int nophotoerr, int ncalc, int ncol, $/;"	f
chisq_dist	../chisq_dist/chisq_dist.h	/^struct chisq_dist {$/;"	s
chisq_dist	../chisq_dist/chisq_dist_pywrap.c	/^    struct chisq_dist* chisq_dist;$/;"	m	struct:ChisqDistObject	typeref:struct:ChisqDistObject::chisq_dist	file:
chisq_max	../configuration.py	/^    chisq_max = ConfigField(default=20.0, required=True)$/;"	v	class:Configuration
chisq_pdf	../utilities.py	/^def chisq_pdf(data, k):$/;"	f
cic	../utilities.py	/^def cic(value, posx=None, nx=None, posy=None, ny=None, posz=None, nz=None, average=False, isolated=True):$/;"	f
clear_neighbors	../cluster.py	/^    def clear_neighbors(self):$/;"	m	class:Cluster
cluster_dtype_base	../cluster.py	/^cluster_dtype_base = [('MEM_MATCH_ID', 'i4'),$/;"	v
color	../chisq_dist/chisq_dist.h	/^    double *color;$/;"	m	struct:chisq_dist
compute_border	../configuration.py	/^    def compute_border(self):$/;"	m	class:Configuration
compute_chisq	../chisq_dist/chisq_dist_lib.py	/^def compute_chisq(covmat, c, slope, pivotmag, refmag, magerr, color, refmagerr=None, lupcorr=None, calc_chisq=True, calc_lkhd=False, nophotoerr=False):$/;"	f
compute_radmask	../mask.py	/^    def compute_radmask(self, ra, dec):$/;"	m	class:Mask
compute_radmask	../mask.py	/^    def compute_radmask(self, ras, decs):$/;"	m	class:HPMask
compute_zred	../zred_color.py	/^    def compute_zred(self, galaxy, no_corrections=False):$/;"	m	class:ZredColor
compute_zreds	../zred_color.py	/^    def compute_zreds(self, galaxies):$/;"	m	class:ZredColor
consolidate_lambda_cuts	../configuration.py	/^    consolidate_lambda_cuts = ConfigField(default=[5.0, 20.0], required=False, isArray=True)$/;"	v	class:Configuration
consolidate_vlim_lstars	../configuration.py	/^    consolidate_vlim_lstars = ConfigField(default=[0.2, 5.0], required=False, isList=True)$/;"	v	class:Configuration
convert_depthfile_to_healsparse	../depthmap.py	/^def convert_depthfile_to_healsparse(depthfile, healsparsefile, nsideCoverage, clobber=False):$/;"	f
convert_maskfile_to_healsparse	../mask.py	/^def convert_maskfile_to_healsparse(maskfile, healsparsefile, nsideCoverage, clobber=False):$/;"	f
copy	../cluster.py	/^    def copy(self):$/;"	m	class:Cluster
copy	../configuration.py	/^    def copy(self):$/;"	m	class:Configuration
covmask_nside_default	../configuration.py	/^    covmask_nside_default = ConfigField(default=32, required=True)$/;"	v	class:Configuration
covmat	../chisq_dist/chisq_dist.h	/^    double *covmat;$/;"	m	struct:chisq_dist
cpars	../solver_nfw/solver_nfw.h	/^    double *cpars;$/;"	m	struct:solver
depthfile	../configuration.py	/^    depthfile = ConfigField()$/;"	v	class:Configuration
dldr_gamma	../configuration.py	/^    dldr_gamma = ConfigField(default=0.6, required=True)$/;"	v	class:Configuration
dtype	../catalog.py	/^    def dtype(self):$/;"	m	class:DataObject
entry_class	../catalog.py	/^    entry_class = Entry$/;"	v	class:Catalog
entry_class	../cluster.py	/^    entry_class = Cluster$/;"	v	class:ClusterCatalog
entry_class	../galaxy.py	/^    entry_class = Galaxy$/;"	v	class:GalaxyCatalog
extend	../catalog.py	/^    def extend(self, n_new):$/;"	m	class:Catalog
filename	../cluster_runner.py	/^    def filename(self):$/;"	m	class:ClusterRunner
filename	../plotting.py	/^    def filename(self):$/;"	m	class:NzPlot
filename	../plotting.py	/^    def filename(self):$/;"	m	class:SpecPlot
finalize_catalog	../galaxy.py	/^    def finalize_catalog(self):$/;"	m	class:GalaxyCatalogMaker
find_center	../centering.py	/^    def find_center(self):$/;"	m	class:Centering
find_center	../centering.py	/^    def find_center(self):$/;"	m	class:CenteringBCG
find_center	../centering.py	/^    def find_center(self):$/;"	m	class:CenteringRandom
find_center	../centering.py	/^    def find_center(self):$/;"	m	class:CenteringRandomSatellite
find_center	../centering.py	/^    def find_center(self):$/;"	m	class:CenteringWcenZred
find_neighbors	../cluster.py	/^    def find_neighbors(self, radius, galcat, megaparsec=False, maxmag=None):$/;"	m	class:Cluster
firstpass_beta	../configuration.py	/^    firstpass_beta = ConfigField(default=0.0, required=True)$/;"	v	class:Configuration
firstpass_centerclass	../configuration.py	/^    firstpass_centerclass = ConfigField(default='CenteringBCG', required=True)$/;"	v	class:Configuration
firstpass_minlambda	../configuration.py	/^    firstpass_minlambda = ConfigField(default=3.0, required=True)$/;"	v	class:Configuration
firstpass_niter	../configuration.py	/^    firstpass_niter = ConfigField(default=2, required=True)$/;"	v	class:Configuration
firstpass_r0	../configuration.py	/^    firstpass_r0 = ConfigField(default=0.5, required=True)$/;"	v	class:Configuration
fit	../fitters.py	/^    def fit(self, p0, full_covmats=None):$/;"	m	class:RedSequenceOffDiagonalFitter
fit	../fitters.py	/^    def fit(self, p0, min_val=None, max_val=None):$/;"	m	class:MedZFitter
fit	../fitters.py	/^    def fit(self, p0_mean, p0_slope, p0_r, p0_bkg, fit_mean=False, fit_slope=False, fit_r=False, fit_bkg=False):$/;"	m	class:CorrectionFitter
fit	../fitters.py	/^    def fit(self, p0_mean, p0_slope, p0_scatter,$/;"	m	class:RedSequenceFitter
fit	../fitters.py	/^    def fit(self, wt0, mu, sigma, bounds=None, offset=0.0):$/;"	m	class:EcgmmFitter
fit	../redmagic/redmagic_calibrate.py	/^    def fit(self, p0_cval, biaspars=None, eratiopars=None, afterburner=False):$/;"	m	class:RedmagicParameterFitter
fit	centeringcal.py	/^    def fit(self, p0):$/;"	m	class:WcenCFitter
fit	centeringcal.py	/^    def fit(self, p0):$/;"	m	class:WcenCwFitter
fit	centeringcal.py	/^    def fit(self, p0):$/;"	m	class:WcenFgFitter
fit	zlambdacal.py	/^    def fit(self, p0_delta, p0_slope, p0_scatter,$/;"	m	class:ZLambdaFitter
fit_bias_eratio	../redmagic/redmagic_calibrate.py	/^    def fit_bias_eratio(self, cval, p0_bias, p0_eratio):$/;"	m	class:RedmagicParameterFitter
from_catfile	../cluster.py	/^    def from_catfile(cls, filename, **kwargs):$/;"	m	class:ClusterCatalog
from_fits_ext	../catalog.py	/^    def from_fits_ext(cls, fits_ext):$/;"	m	class:DataObject
from_fits_file	../catalog.py	/^    def from_fits_file(cls, filename, ext=1, rows=None):$/;"	m	class:DataObject
from_galfile	../galaxy.py	/^    def from_galfile(cls, filename, zredfile=None, nside=0, hpix=0, border=0.0, truth=False):$/;"	m	class:GalaxyCatalog
galcol	../galaxy.py	/^    def galcol(self):$/;"	m	class:Galaxy
galcol	../galaxy.py	/^    def galcol(self):$/;"	m	class:GalaxyCatalog
galcol_err	../galaxy.py	/^    def galcol_err(self):$/;"	m	class:GalaxyCatalog
galfile	../configuration.py	/^    galfile = ConfigField(required=True)$/;"	v	class:Configuration
galfile_nside	../configuration.py	/^    galfile_nside = ConfigField(required=True)$/;"	v	class:Configuration
galfile_pixelized	../configuration.py	/^    galfile_pixelized = ConfigField(required=True)$/;"	v	class:Configuration
gaussFunction	../utilities.py	/^def gaussFunction(x, *p):$/;"	f
generate_randoms	../redmagic/redmagic_randoms.py	/^    def generate_randoms(self, nrandoms, filename, clobber=False):$/;"	m	class:RedmagicGenerateRandoms
getMemoryString	../utilities.py	/^def getMemoryString(location):$/;"	f
get_areas	../volumelimit.py	/^    def get_areas(self):$/;"	m	class:VolumeLimitMask
get_areas	../volumelimit.py	/^    def get_areas(self):$/;"	m	class:VolumeLimitMaskFixed
get_colrange	../color_background.py	/^    def get_colrange(self, bkg_index):$/;"	m	class:ColorBackground
get_depth_values	../depthmap.py	/^    def get_depth_values(self, ras, decs):$/;"	m	class:DepthMap
get_fracgoods	../depthmap.py	/^    def get_fracgoods(self, ras, decs):$/;"	m	class:DepthMap
get_galaxy_dtype	../galaxy.py	/^    def get_galaxy_dtype(nmag, truth=False):$/;"	m	class:GalaxyCatalogMaker
get_healsparse_subpix_indices	../utilities.py	/^def get_healsparse_subpix_indices(subpix_nside, subpix_hpix, subpix_border, coverage_nside):$/;"	f
get_hpmask_subpix_indices	../utilities.py	/^def get_hpmask_subpix_indices(submask_nside, submask_hpix, submask_border, nside_mask, hpix):$/;"	f
get_mask	../mask.py	/^def get_mask(config, include_maskgals=True):$/;"	f
get_subpixel_indices	../galaxy.py	/^def get_subpixel_indices(galtable, hpix=None, border=0.0, nside=0):$/;"	f
halofile	../configuration.py	/^    halofile = ConfigField()$/;"	v	class:Configuration
has_truth	../configuration.py	/^    has_truth = ConfigField(default=False)$/;"	v	class:Configuration
histoGauss	../utilities.py	/^def histoGauss(ax, array):$/;"	f
hpix	../configuration.py	/^    hpix = ConfigField(default=0, required=True)$/;"	v	class:Configuration
info	../utilities.py	/^    def info(self, message):$/;"	m	class:Logger
interpol	../utilities.py	/^def interpol(v, x, xout):$/;"	f
lambda	../solver_nfw/solver_nfw.h	/^    double *lambda;$/;"	m	struct:solver
likelihoods_beta	../configuration.py	/^    likelihoods_beta = ConfigField(default=0.2, required=True)$/;"	v	class:Configuration
likelihoods_minlambda	../configuration.py	/^    likelihoods_minlambda = ConfigField(default=3.0, required=True)$/;"	v	class:Configuration
likelihoods_r0	../configuration.py	/^    likelihoods_r0 = ConfigField(default=1.0, required=True)$/;"	v	class:Configuration
likelihoods_use_zred	../configuration.py	/^    likelihoods_use_zred = ConfigField(default=True, required=True)$/;"	v	class:Configuration
limmag_catalog	../configuration.py	/^    limmag_catalog = ConfigField(required=True)$/;"	v	class:Configuration
limmag_ref	../configuration.py	/^    limmag_ref = ConfigField(required=True)$/;"	v	class:Configuration
lnw_cen_mean	../configuration.py	/^    lnw_cen_mean = ConfigField(required=False, default=-9999.0)$/;"	v	class:Configuration
lnw_cen_sigma	../configuration.py	/^    lnw_cen_sigma = ConfigField(required=False, default=-9999.0)$/;"	v	class:Configuration
lnw_fg_mean	../configuration.py	/^    lnw_fg_mean = ConfigField(required=False, default=-9999.0)$/;"	v	class:Configuration
lnw_fg_sigma	../configuration.py	/^    lnw_fg_sigma = ConfigField(required=False, default=-9999.0)$/;"	v	class:Configuration
lnw_sat_mean	../configuration.py	/^    lnw_sat_mean = ConfigField(required=False, default=-9999.0)$/;"	v	class:Configuration
lnw_sat_sigma	../configuration.py	/^    lnw_sat_sigma = ConfigField(required=False, default=-9999.0)$/;"	v	class:Configuration
lookup_diagonal	../color_background.py	/^    def lookup_diagonal(self, bkg_index, colors, refmags, doRaise=True):$/;"	m	class:ColorBackground
lookup_offdiag	../color_background.py	/^    def lookup_offdiag(self, bkg_index1, bkg_index2, colors1, colors2, refmags, doRaise=True):$/;"	m	class:ColorBackground
lumrefmagindex	../redsequence.py	/^    def lumrefmagindex(self,lumrefmag):$/;"	m	class:RedSequenceColorPar
lupcorr	../chisq_dist/chisq_dist.h	/^    double *lupcorr;$/;"	m	struct:chisq_dist
lval_reference	../configuration.py	/^    lval_reference = ConfigField(default=0.2, required=True)$/;"	v	class:Configuration
magerr	../chisq_dist/chisq_dist.h	/^    double *magerr;$/;"	m	struct:chisq_dist
make_lockfile	../utilities.py	/^def make_lockfile(lockfile, block=False, maxtry=300, waittime=2):$/;"	f
make_nodes	../utilities.py	/^def make_nodes(zrange, nodesize, maxnode=None):$/;"	f
make_zred_table	../zred_runner.py	/^    def make_zred_table(self, indices_and_filenames):$/;"	m	class:ZredRunPixels
mask_mode	../configuration.py	/^    mask_mode = ConfigField(default=0, required=True)$/;"	v	class:Configuration
maskfile	../configuration.py	/^    maskfile = ConfigField()$/;"	v	class:Configuration
maskgal_dmag_extra	../configuration.py	/^    maskgal_dmag_extra = ConfigField(default=0.3, required=True)$/;"	v	class:Configuration
maskgal_ngals	../configuration.py	/^    maskgal_ngals = ConfigField(default=6000, required=True)$/;"	v	class:Configuration
maskgal_nsamples	../configuration.py	/^    maskgal_nsamples = ConfigField(default=100, required=True)$/;"	v	class:Configuration
maskgal_rad_stepsize	../configuration.py	/^    maskgal_rad_stepsize = ConfigField(default=0.1, required=True)$/;"	v	class:Configuration
maskgal_zred_err	../configuration.py	/^    maskgal_zred_err = ConfigField(default=0.02, required=True)$/;"	v	class:Configuration
maskgalfile	../configuration.py	/^    maskgalfile = ConfigField(default='maskgals.fit', required=True)$/;"	v	class:Configuration
match_many	../galaxy.py	/^    def match_many(self, ras, decs, radius, maxmatch=0):$/;"	m	class:GalaxyCatalog
match_one	../galaxy.py	/^    def match_one(self, ra, dec, radius):$/;"	m	class:GalaxyCatalog
max_maskfrac	../configuration.py	/^    max_maskfrac = ConfigField(default=0.2, required=True)$/;"	v	class:Configuration
member_dtype_base	../cluster.py	/^member_dtype_base = [('MEM_MATCH_ID', 'i4'),$/;"	v
mode	../chisq_dist/chisq_dist.h	/^    int mode;$/;"	m	struct:chisq_dist
moduledef	../chisq_dist/chisq_dist_pywrap.c	/^static struct PyModuleDef moduledef = {$/;"	v	typeref:struct:PyModuleDef	file:
moduledef	../solver_nfw/solver_nfw_pywrap.c	/^static struct PyModuleDef moduledef = {$/;"	v	typeref:struct:PyModuleDef	file:
mpc_scale	../cluster.py	/^    def mpc_scale(self):$/;"	m	class:Cluster
mstar	../cluster.py	/^    def mstar(self):$/;"	m	class:Cluster
mstar	../redsequence.py	/^    def mstar(self,z):$/;"	m	class:RedSequenceColorPar
mstar_band	../configuration.py	/^    mstar_band = ConfigField(default='i03')$/;"	v	class:Configuration
mstar_survey	../configuration.py	/^    mstar_survey = ConfigField(default='sdss')$/;"	v	class:Configuration
ncalc	../chisq_dist/chisq_dist.h	/^    int ncalc;$/;"	m	struct:chisq_dist
ncol	../chisq_dist/chisq_dist.h	/^    int ncol;$/;"	m	struct:chisq_dist
nfw_pdf	../utilities.py	/^def nfw_pdf(x, rscale=0.15, corer=0.1, radfactor=False):$/;"	f
nfw_weights	../solver_nfw/nfw_weights.c	/^int nfw_weights(double inlambda, double r0, double beta, long ngal,$/;"	f
ngal	../chisq_dist/chisq_dist.h	/^    int ngal;$/;"	m	struct:chisq_dist
ngal	../solver_nfw/solver_nfw.h	/^    long ngal;$/;"	m	struct:solver
nmag	../configuration.py	/^    nmag = ConfigField(required=True)$/;"	v	class:Configuration
npzbins	../configuration.py	/^    npzbins = ConfigField(default=21, required=True)$/;"	v	class:Configuration
nside	../configuration.py	/^    nside = ConfigField(default=0, required=True)$/;"	v	class:Configuration
nz	../chisq_dist/chisq_dist.h	/^    int nz;$/;"	m	struct:chisq_dist
outbase	../configuration.py	/^    outbase = ConfigField(required=True)$/;"	v	class:Configuration
outpath	../configuration.py	/^    outpath = ConfigField(default='.\/', required=True)$/;"	v	class:Configuration
output	../cluster_runner.py	/^    def output(self, savemembers=True, withversion=True, clobber=False, outbase=None):$/;"	m	class:ClusterRunner
output_configuration	calibrate.py	/^    def output_configuration(self):$/;"	m	class:RedmapperCalibrator
output_training	../run_colormem.py	/^    def output_training(self):$/;"	m	class:RunColormem
output_yaml	../configuration.py	/^    def output_yaml(self, filename):$/;"	m	class:Configuration
p	../solver_nfw/solver_nfw.h	/^    double *p;$/;"	m	struct:solver
parfile	../configuration.py	/^    parfile = ConfigField()$/;"	v	class:Configuration
percolation_beta	../configuration.py	/^    percolation_beta = ConfigField(default=0.2, required=True)$/;"	v	class:Configuration
percolation_lmask	../configuration.py	/^    percolation_lmask = ConfigField()$/;"	v	class:Configuration
percolation_maxcen	../configuration.py	/^    percolation_maxcen = ConfigField(default=5, required=True)$/;"	v	class:Configuration
percolation_memlum	../configuration.py	/^    percolation_memlum = ConfigField()$/;"	v	class:Configuration
percolation_memradius	../configuration.py	/^    percolation_memradius = ConfigField()$/;"	v	class:Configuration
percolation_minlambda	../configuration.py	/^    percolation_minlambda = ConfigField(default=3.0, required=True)$/;"	v	class:Configuration
percolation_niter	../configuration.py	/^    percolation_niter = ConfigField(default=2, required=True)$/;"	v	class:Configuration
percolation_pbcg_cut	../configuration.py	/^    percolation_pbcg_cut = ConfigField(default=0.5, required=True)$/;"	v	class:Configuration
percolation_r0	../configuration.py	/^    percolation_r0 = ConfigField(default=1.0, required=True)$/;"	v	class:Configuration
percolation_rmask_0	../configuration.py	/^    percolation_rmask_0 = ConfigField(default=1.5, required=True)$/;"	v	class:Configuration
percolation_rmask_beta	../configuration.py	/^    percolation_rmask_beta = ConfigField(default=0.2, required=True)$/;"	v	class:Configuration
percolation_rmask_gamma	../configuration.py	/^    percolation_rmask_gamma = ConfigField(default=0.0, required=True)$/;"	v	class:Configuration
percolation_rmask_zpivot	../configuration.py	/^    percolation_rmask_zpivot = ConfigField(default=0.3, required=True)$/;"	v	class:Configuration
phi1_mmstar_m	../configuration.py	/^    phi1_mmstar_m = ConfigField(required=False, default=-9999.0)$/;"	v	class:Configuration
phi1_mmstar_slope	../configuration.py	/^    phi1_mmstar_slope = ConfigField(required=False, default=-9999.0)$/;"	v	class:Configuration
phi1_msig_m	../configuration.py	/^    phi1_msig_m = ConfigField(required=False, default=-9999.0)$/;"	v	class:Configuration
phi1_msig_slope	../configuration.py	/^    phi1_msig_slope = ConfigField(required=False, default=-9999.0)$/;"	v	class:Configuration
pivotmag	../chisq_dist/chisq_dist.h	/^    double *pivotmag;$/;"	m	struct:chisq_dist
plot_cluster_catalog	../plotting.py	/^    def plot_cluster_catalog(self, cat, areastr, nosamp=False):$/;"	m	class:NzPlot
plot_cluster_catalog	../plotting.py	/^    def plot_cluster_catalog(self, cat, title=None, figure_return=False):$/;"	m	class:SpecPlot
plot_cluster_catalog_from_members	../plotting.py	/^    def plot_cluster_catalog_from_members(self, cat, mem, title=None, figure_return=False):$/;"	m	class:SpecPlot
plot_nz	../plotting.py	/^    def plot_nz(self, z, areastr, zrange, xlabel=None, ylabel=None,$/;"	m	class:NzPlot
plot_redmagic_catalog	../plotting.py	/^    def plot_redmagic_catalog(self, cat, name, eta, n0, areastr, sample=True, zrange=None, extraname=None):$/;"	m	class:NzPlot
plot_redsequence_diag	../redsequence.py	/^    def plot_redsequence_diag(self, fig, ind, bands):$/;"	m	class:RedSequenceColorPar
plot_redsequence_offdiags	../redsequence.py	/^    def plot_redsequence_offdiags(self, fig, bands):$/;"	m	class:RedSequenceColorPar
plot_values	../plotting.py	/^    def plot_values(self, z_spec, z_phot, z_phot_e, name='z_\\lambda', specname='z_{\\mathrm{spec}}',$/;"	m	class:SpecPlot
plotpath	../configuration.py	/^    plotpath = ConfigField(default='', required=True)$/;"	v	class:Configuration
r	../solver_nfw/solver_nfw.h	/^    double *r;$/;"	m	struct:solver
r0	../solver_nfw/solver_nfw.h	/^    double r0;$/;"	m	struct:solver
randfile	../configuration.py	/^    randfile = ConfigField()$/;"	v	class:Configuration
read_maskgals	../mask.py	/^    def read_maskgals(self, maskgalfile):$/;"	m	class:Mask
read_members	../utilities.py	/^def read_members(catfile):$/;"	f
read_yaml	../configuration.py	/^def read_yaml(filename):$/;"	f
redgalfile	../configuration.py	/^    redgalfile = ConfigField()$/;"	v	class:Configuration
redgalmodelfile	../configuration.py	/^    redgalmodelfile = ConfigField()$/;"	v	class:Configuration
redmagic_calib_chisqcut	../configuration.py	/^    redmagic_calib_chisqcut = ConfigField(default=20.0, required=True)$/;"	v	class:Configuration
redmagic_calib_corr_nodesize	../configuration.py	/^    redmagic_calib_corr_nodesize = ConfigField(default=0.05, required=True)$/;"	v	class:Configuration
redmagic_calib_fractrain	../configuration.py	/^    redmagic_calib_fractrain = ConfigField(default=0.5, required=True)$/;"	v	class:Configuration
redmagic_calib_nodesize	../configuration.py	/^    redmagic_calib_nodesize = ConfigField(default=0.05, required=True)$/;"	v	class:Configuration
redmagic_calib_pz_integrate	../configuration.py	/^    redmagic_calib_pz_integrate = ConfigField(default=True, required=True)$/;"	v	class:Configuration
redmagic_calib_zbinsize	../configuration.py	/^    redmagic_calib_zbinsize = ConfigField(default=0.02, required=True)$/;"	v	class:Configuration
redmagic_etas	../configuration.py	/^    redmagic_etas = ConfigField(default=[], required=True, isArray=True)$/;"	v	class:Configuration
redmagic_maxlum	../configuration.py	/^    redmagic_maxlum = ConfigField(default=100.0, required=True)$/;"	v	class:Configuration
redmagic_mock_truthspec	../configuration.py	/^    redmagic_mock_truthspec = ConfigField(default=False, required=True)$/;"	v	class:Configuration
redmagic_n0s	../configuration.py	/^    redmagic_n0s = ConfigField(default=[], required=True, isArray=True)$/;"	v	class:Configuration
redmagic_names	../configuration.py	/^    redmagic_names = ConfigField(default=[], required=True, isList=True)$/;"	v	class:Configuration
redmagic_run_afterburner	../configuration.py	/^    redmagic_run_afterburner = ConfigField(default=True, required=True)$/;"	v	class:Configuration
redmagic_zmaxes	../configuration.py	/^    redmagic_zmaxes = ConfigField(default=[], required=True, isArray=True)$/;"	v	class:Configuration
redmagic_zrange	../configuration.py	/^    redmagic_zrange = ConfigField(default=[], required=False, isArray=True)$/;"	v	class:Configuration
redmagicfile	../configuration.py	/^    redmagicfile = ConfigField()$/;"	v	class:Configuration
redmapper_filename	../configuration.py	/^    def redmapper_filename(self, redmapper_name, paths=None, filetype='fit'):$/;"	m	class:Configuration
redshift	../cluster.py	/^    def redshift(self):$/;"	m	class:Cluster
redshift	../cluster.py	/^    def redshift(self, value):$/;"	m	class:Cluster
ref_ind	../configuration.py	/^    ref_ind = ConfigField(required=True)$/;"	v	class:Configuration
refmag	../chisq_dist/chisq_dist.h	/^    double *refmag;$/;"	m	struct:chisq_dist
refmag	../configuration.py	/^    refmag = ConfigField(required=True)$/;"	v	class:Configuration
refmagerr	../chisq_dist/chisq_dist.h	/^    double *refmagerr;$/;"	m	struct:chisq_dist
refmagindex	../redsequence.py	/^    def refmagindex(self,refmag):$/;"	m	class:RedSequenceColorPar
reset	../cluster.py	/^    def reset(self):$/;"	m	class:Cluster
reset	../configuration.py	/^    def reset(self):$/;"	m	class:ConfigField
rlambda	../solver_nfw/solver_nfw.h	/^    double *rlambda;$/;"	m	struct:solver
rsig	../configuration.py	/^    rsig = ConfigField(default=0.05, required=True)$/;"	v	class:Configuration
rsig	../solver_nfw/solver_nfw.h	/^    double rsig;$/;"	m	struct:solver
run	../background.py	/^    def run(self, clobber=False, natatime=100000):$/;"	m	class:ZredBackgroundGenerator
run	../background.py	/^    def run(self, clobber=False, natatime=100000, deepmode=False):$/;"	m	class:BackgroundGenerator
run	../cluster_runner.py	/^    def run(self, *args, **kwargs):$/;"	m	class:ClusterRunner
run	../color_background.py	/^    def run(self, clobber=False):$/;"	m	class:ColorBackgroundGenerator
run	../pipeline/redmapperconsolidatetask.py	/^    def run(self, do_plots=True, match_spec=True):$/;"	m	class:RedmapperConsolidateTask
run	../pipeline/redmappertask.py	/^    def run(self):$/;"	m	class:RunRedmapperPixelTask
run	../pipeline/zredtask.py	/^    def run(self):$/;"	m	class:RunZredPixelTask
run	../redmagic/redmagic_calibrate.py	/^    def run(self, gals=None, do_run=True):$/;"	m	class:RedmagicCalibrator
run	../redmagic/redmagictask.py	/^    def run(self, modes=None, clobber=False, do_plots=True, n_randoms=None):$/;"	f
run	../redmapper_run.py	/^    def run(self, specmode=False, seedfile=None, check=True,$/;"	m	class:RedmapperRun
run	../run_colormem.py	/^    def run(self, *args, **kwargs):$/;"	m	class:RunColormem
run	../run_firstpass.py	/^    def run(self, *args, **kwargs):$/;"	m	class:RunFirstPass
run	../run_likelihoods.py	/^    def run(self, *args, **kwargs):$/;"	m	class:RunLikelihoods
run	../run_percolation.py	/^    def run(self, *args, **kwargs):$/;"	m	class:RunPercolation
run	../runcat.py	/^    def run(self, *args, **kwargs):$/;"	m	class:RunCatalog
run	../zred_runner.py	/^    def run(self, galaxyfile, outfile, clobber=False, nperproc=None, maxperproc=500000):$/;"	m	class:ZredRunCatalog
run	../zred_runner.py	/^    def run(self, single_process=False, no_zred_table=False, verbose=False):$/;"	m	class:ZredRunPixels
run	calibrate.py	/^    def run(self):$/;"	m	class:RedmapperCalibrator
run	calibrate.py	/^    def run(self, iteration):$/;"	m	class:RedmapperCalibrationIteration
run	calibrate.py	/^    def run(self, iteration):$/;"	m	class:RedmapperCalibrationIterationFinal
run	centeringcal.py	/^    def run(self, testing=False):$/;"	m	class:WcenCalibrator
run	prepmembers.py	/^    def run(self, mode):$/;"	m	class:PrepMembers
run	redsequencecal.py	/^    def run(self, doRaise=True):$/;"	m	class:RedSequenceCalibrator
run	selectspecred.py	/^    def run(self):$/;"	m	class:SelectSpecRedGalaxies
run	selectspecseeds.py	/^    def run(self, usetrain=True):$/;"	m	class:SelectSpecSeeds
run	zlambdacal.py	/^    def run(self):$/;"	m	class:ZLambdaCalibrator
sample_from_pdf	../utilities.py	/^def sample_from_pdf(f, ran, step, nsamp, **kwargs):$/;"	f
save_pars	redsequencecal.py	/^    def save_pars(self, filename, clobber=False):$/;"	m	class:RedSequenceCalibrator
schechter	centeringcal.py	/^        def schechter(x, alpha=-1.0, mstar=0.0):$/;"	f	function:WcenCalibrator._schechter_montecarlo_calib
schechter_pdf	../utilities.py	/^def schechter_pdf(x, alpha=-1.0, mstar=0.0):$/;"	f
seedfile	../configuration.py	/^    seedfile = ConfigField()$/;"	v	class:Configuration
select_maskgals_sample	../mask.py	/^    def select_maskgals_sample(self, maskgal_index=None):$/;"	m	class:Mask
select_redmagic_galaxies	../redmagic/redmagic_selector.py	/^    def select_redmagic_galaxies(self, gals, mode, return_indices=False):$/;"	m	class:RedmagicSelector
select_scaleval	../configuration.py	/^    select_scaleval = ConfigField(default=False, required=True)$/;"	v	class:Configuration
set_length	../configuration.py	/^    def set_length(self, length):$/;"	m	class:ConfigField
set_neighbors	../cluster.py	/^    def set_neighbors(self, neighbors):$/;"	m	class:Cluster
set_radmask	../mask.py	/^    def set_radmask(self, cluster):$/;"	m	class:Mask
set_wcen_vals	../configuration.py	/^    def set_wcen_vals(self):$/;"	m	class:Configuration
sigint	../chisq_dist/chisq_dist.h	/^    double sigint;$/;"	m	struct:chisq_dist
sigma_g_diagonal	../color_background.py	/^    def sigma_g_diagonal(self, bkg_index, colors, refmags):$/;"	m	class:ColorBackground
sigma_g_lookup	../background.py	/^    def sigma_g_lookup(self, z, chisq, refmag, allow0=False):$/;"	m	class:Background
sigma_g_lookup	../background.py	/^    def sigma_g_lookup(self, zred, refmag):$/;"	m	class:ZredBackground
size	../catalog.py	/^    def size(self):$/;"	m	class:Catalog
slope	../chisq_dist/chisq_dist.h	/^    double *slope;$/;"	m	struct:chisq_dist
solve_nfw	../solver_nfw/solver_nfw_lib.py	/^    def solve_nfw(self):$/;"	m	class:Solver
solver	../solver_nfw/solver_nfw.h	/^struct solver {$/;"	s
solver	../solver_nfw/solver_nfw_pywrap.c	/^    struct solver* solver;$/;"	m	struct:SolverObject	typeref:struct:SolverObject::solver	file:
solver_nfw	../solver_nfw/solver_nfw.c	/^int solver_nfw(double r0, double beta, long ngal,$/;"	f
specfile	../configuration.py	/^    specfile = ConfigField()$/;"	v	class:Configuration
specfile_train	../configuration.py	/^    specfile_train = ConfigField()$/;"	v	class:Configuration
splint	../utilities.py	/^    def splint(self,x):$/;"	m	class:CubicSpline
split_galaxies	../galaxy.py	/^    def split_galaxies(self, gals):$/;"	m	class:GalaxyCatalogMaker
survey_mode	../configuration.py	/^    survey_mode = ConfigField(required=True)$/;"	v	class:Configuration
theta_r	../solver_nfw/solver_nfw.h	/^    double *theta_r;$/;"	m	struct:solver
to_fits_file	../catalog.py	/^    def to_fits_file(self, filename, clobber=False, header=None, extname=None, indices=None):$/;"	m	class:DataObject
ucounts	../solver_nfw/solver_nfw.h	/^    double *ucounts;$/;"	m	struct:solver
update_neighbors_dist	../cluster.py	/^    def update_neighbors_dist(self):$/;"	m	class:Cluster
validate	../configuration.py	/^    def validate(self):$/;"	m	class:Configuration
validate	../configuration.py	/^    def validate(self, name):$/;"	m	class:ConfigField
version	../__init__.py	/^version = __version__$/;"	v
version	../configuration.py	/^    version = ConfigField(default=__version__, required=True)$/;"	v	class:Configuration
vlim_bands	../configuration.py	/^    vlim_bands = ConfigField(default=[], required=False, isList=True)$/;"	v	class:Configuration
vlim_depthfiles	../configuration.py	/^    vlim_depthfiles = ConfigField(default=[], required=False, isList=True)$/;"	v	class:Configuration
vlim_lstar	../configuration.py	/^    vlim_lstar = ConfigField(default=0.2, required=False)$/;"	v	class:Configuration
vlim_nsigs	../configuration.py	/^    vlim_nsigs = ConfigField(default=[], required=False, isArray=True)$/;"	v	class:Configuration
w	../solver_nfw/solver_nfw.h	/^    double *w;$/;"	m	struct:solver
wcen_Delta0	../configuration.py	/^    wcen_Delta0 = ConfigField(required=False, default=0.0)$/;"	v	class:Configuration
wcen_Delta1	../configuration.py	/^    wcen_Delta1 = ConfigField(required=False, default=0.0)$/;"	v	class:Configuration
wcen_cal_zrange	../configuration.py	/^    wcen_cal_zrange = ConfigField(isArray=True, default=np.array([0.0,1.0]))$/;"	v	class:Configuration
wcen_maxlambda	../configuration.py	/^    wcen_maxlambda = ConfigField(default=100.0, required=True)$/;"	v	class:Configuration
wcen_minlambda	../configuration.py	/^    wcen_minlambda = ConfigField(default=10.0, required=True)$/;"	v	class:Configuration
wcen_pivot	../configuration.py	/^    wcen_pivot = ConfigField(default=30.0, required=True)$/;"	v	class:Configuration
wcen_rsoft	../configuration.py	/^    wcen_rsoft = ConfigField(default=0.05, required=True)$/;"	v	class:Configuration
wcen_sigma_m	../configuration.py	/^    wcen_sigma_m = ConfigField(required=False, default=0.0)$/;"	v	class:Configuration
wcen_uselum	../configuration.py	/^    wcen_uselum = ConfigField(default=True, required=True)$/;"	v	class:Configuration
wcen_zred_chisq_max	../configuration.py	/^    wcen_zred_chisq_max = ConfigField(default=100.0, required=True)$/;"	v	class:Configuration
wcenfile	../configuration.py	/^    wcenfile = ConfigField()$/;"	v	class:Configuration
wt	../solver_nfw/solver_nfw.h	/^    double *wt;$/;"	m	struct:solver
zeropoint	../configuration.py	/^    zeropoint = ConfigField(required=True)$/;"	v	class:Configuration
zeros	../catalog.py	/^    def zeros(cls, size, dtype):$/;"	m	class:DataObject
zeros	../cluster.py	/^    def zeros(cls, size, **kwargs):$/;"	m	class:ClusterCatalog
zindex	../redsequence.py	/^    def zindex(self,z):$/;"	m	class:RedSequenceColorPar
zlambda_binsize	../configuration.py	/^    zlambda_binsize = ConfigField(default=0.002, required=True)$/;"	v	class:Configuration
zlambda_epsilon	../configuration.py	/^    zlambda_epsilon = ConfigField(default=0.005, required=True)$/;"	v	class:Configuration
zlambda_maxiter	../configuration.py	/^    zlambda_maxiter = ConfigField(default=20, required=True)$/;"	v	class:Configuration
zlambda_parab_step	../configuration.py	/^    zlambda_parab_step = ConfigField(default=0.001, required=True)$/;"	v	class:Configuration
zlambda_pivot	../configuration.py	/^    zlambda_pivot = ConfigField(default=30.0, required=True)$/;"	v	class:Configuration
zlambda_tol	../configuration.py	/^    zlambda_tol = ConfigField(default=0.0002, required=True)$/;"	v	class:Configuration
zlambda_topfrac	../configuration.py	/^    zlambda_topfrac = ConfigField(default=0.7, required=True)$/;"	v	class:Configuration
zlambdafile	../configuration.py	/^    zlambdafile = ConfigField()$/;"	v	class:Configuration
zmemfile	../configuration.py	/^    zmemfile = ConfigField()$/;"	v	class:Configuration
zrange	../configuration.py	/^    zrange = ConfigField(isArray=True, array_length=2, required=True)$/;"	v	class:Configuration
zrange_cushioned	../configuration.py	/^    def zrange_cushioned(self):$/;"	m	class:Configuration
zred_extra_dtype	../galaxy.py	/^zred_extra_dtype = [('ZRED', 'f4'),$/;"	v
zredc_binsize_coarse	../configuration.py	/^    zredc_binsize_coarse = ConfigField(default=0.005)$/;"	v	class:Configuration
zredc_binsize_fine	../configuration.py	/^    zredc_binsize_fine = ConfigField(default=0.0001)$/;"	v	class:Configuration
zredfile	../configuration.py	/^    zredfile = ConfigField()$/;"	v	class:Configuration
